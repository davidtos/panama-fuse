// Generated by jextract

package org.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$9 {

    static final MemoryLayout __timezone$LAYOUT = C_LONG;
    static final VarHandle __timezone$VH = constants$9.__timezone$LAYOUT.varHandle(long.class);
    static final MemorySegment __timezone$SEGMENT = RuntimeHelper.lookupGlobalVariable(fuse_h.LIBRARIES, "__timezone", constants$9.__timezone$LAYOUT);
    static final MemoryLayout tzname$LAYOUT = MemoryLayout.sequenceLayout(2, C_POINTER);
    static final MemorySegment tzname$SEGMENT = RuntimeHelper.lookupGlobalVariable(fuse_h.LIBRARIES, "tzname", constants$9.tzname$LAYOUT);
    static final FunctionDescriptor tzset$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle tzset$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "tzset",
        "()V",
        constants$9.tzset$FUNC, false
    );
    static final MemoryLayout daylight$LAYOUT = C_INT;
    static final VarHandle daylight$VH = constants$9.daylight$LAYOUT.varHandle(int.class);
    static final MemorySegment daylight$SEGMENT = RuntimeHelper.lookupGlobalVariable(fuse_h.LIBRARIES, "daylight", constants$9.daylight$LAYOUT);
    static final MemoryLayout timezone$LAYOUT = C_LONG;
    static final VarHandle timezone$VH = constants$9.timezone$LAYOUT.varHandle(long.class);
    static final MemorySegment timezone$SEGMENT = RuntimeHelper.lookupGlobalVariable(fuse_h.LIBRARIES, "timezone", constants$9.timezone$LAYOUT);
    static final FunctionDescriptor timegm$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle timegm$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "timegm",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$9.timegm$FUNC, false
    );
}


