// Generated by jextract

package org.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$12 {

    static final FunctionDescriptor timer_getoverrun$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle timer_getoverrun$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "timer_getoverrun",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$12.timer_getoverrun$FUNC, false
    );
    static final FunctionDescriptor timespec_get$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle timespec_get$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "timespec_get",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$12.timespec_get$FUNC, false
    );
    static final FunctionDescriptor stat$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle stat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "stat",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$12.stat$FUNC, false
    );
    static final FunctionDescriptor fstat$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fstat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fstat",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$12.fstat$FUNC, false
    );
    static final FunctionDescriptor fstatat$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle fstatat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fstatat",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$12.fstatat$FUNC, false
    );
    static final FunctionDescriptor lstat$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle lstat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "lstat",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$12.lstat$FUNC, false
    );
}


