// Generated by jextract

package org.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$14 {

    static final FunctionDescriptor mkdirat$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle mkdirat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "mkdirat",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$14.mkdirat$FUNC, false
    );
    static final FunctionDescriptor mknod$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONG
    );
    static final MethodHandle mknod$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "mknod",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        constants$14.mknod$FUNC, false
    );
    static final FunctionDescriptor mknodat$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_LONG
    );
    static final MethodHandle mknodat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "mknodat",
        "(ILjdk/incubator/foreign/MemoryAddress;IJ)I",
        constants$14.mknodat$FUNC, false
    );
    static final FunctionDescriptor mkfifo$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle mkfifo$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "mkfifo",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$14.mkfifo$FUNC, false
    );
    static final FunctionDescriptor mkfifoat$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle mkfifoat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "mkfifoat",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$14.mkfifoat$FUNC, false
    );
    static final FunctionDescriptor utimensat$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle utimensat$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "utimensat",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$14.utimensat$FUNC, false
    );
}


