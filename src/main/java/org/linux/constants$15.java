// Generated by jextract

package org.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$15 {

    static final FunctionDescriptor futimens$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle futimens$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "futimens",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$15.futimens$FUNC, false
    );
    static final FunctionDescriptor statvfs$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle statvfs$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "statvfs",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$15.statvfs$FUNC, false
    );
    static final FunctionDescriptor fstatvfs$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fstatvfs$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fstatvfs",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$15.fstatvfs$FUNC, false
    );
    static final FunctionDescriptor readv$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle readv$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "readv",
        "(ILjdk/incubator/foreign/MemoryAddress;I)J",
        constants$15.readv$FUNC, false
    );
    static final FunctionDescriptor writev$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle writev$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "writev",
        "(ILjdk/incubator/foreign/MemoryAddress;I)J",
        constants$15.writev$FUNC, false
    );
    static final FunctionDescriptor preadv$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_INT,
        C_LONG
    );
    static final MethodHandle preadv$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "preadv",
        "(ILjdk/incubator/foreign/MemoryAddress;IJ)J",
        constants$15.preadv$FUNC, false
    );
}


