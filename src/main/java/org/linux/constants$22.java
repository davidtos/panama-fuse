// Generated by jextract

package org.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$22 {

    static final FunctionDescriptor fuse_fs_fsyncdir$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fuse_fs_fsyncdir$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fuse_fs_fsyncdir",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$22.fuse_fs_fsyncdir$FUNC, false
    );
    static final FunctionDescriptor fuse_fs_releasedir$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fuse_fs_releasedir$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fuse_fs_releasedir",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$22.fuse_fs_releasedir$FUNC, false
    );
    static final FunctionDescriptor fuse_fs_create$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fuse_fs_create$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fuse_fs_create",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$22.fuse_fs_create$FUNC, false
    );
    static final FunctionDescriptor fuse_fs_lock$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fuse_fs_lock$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fuse_fs_lock",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$22.fuse_fs_lock$FUNC, false
    );
    static final FunctionDescriptor fuse_fs_flock$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle fuse_fs_flock$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fuse_fs_flock",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$22.fuse_fs_flock$FUNC, false
    );
    static final FunctionDescriptor fuse_fs_chmod$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fuse_fs_chmod$MH = RuntimeHelper.downcallHandle(
        fuse_h.LIBRARIES, "fuse_fs_chmod",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$22.fuse_fs_chmod$FUNC, false
    );
}


